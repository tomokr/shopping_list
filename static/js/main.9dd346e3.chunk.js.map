{"version":3,"sources":["App.tsx","reportWebVitals.js","index.js"],"names":["App","useState","items","setItems","inputValue","setInputValue","className","onSubmit","e","preventDefault","newItem","lists","value","onChange","event","target","type","style","listStyleType","length","map","item","id","onClick","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OA6DeA,MAzDf,WAAgB,IAAD,EACaC,mBAAmB,IADhC,mBACNC,EADM,KACCC,EADD,OAEuBF,mBAAS,IAFhC,mBAENG,EAFM,KAEMC,EAFN,KAeb,OACE,cAAC,WAAD,UACE,sBAAKC,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,2BACA,qBAAKA,UAAU,mBAAf,SACE,qBAAKA,UAAU,SAAf,SACE,uBAAMC,SAjBhB,SAAsBC,GACpBA,EAAEC,iBACF,IAAMC,EAAUN,EACA,KAAZM,GAAgBP,GAAS,SAACQ,GAAD,4BAAeA,GAAf,CAAsBD,OACnDL,EAAc,KAaN,UACE,uBACEO,MAAOR,EACPS,SAAU,SAACC,GAAD,OAAWT,EAAcS,EAAMC,OAAOH,UAElD,wBAAQI,KAAK,SAAb,wBAKN,8BACE,oBAAIC,MAAO,CAAEC,cAAe,QAA5B,SACGhB,EAAMiB,OAAS,GACdjB,EAAMkB,KAAI,SAACC,EAAMC,GACf,OACE,6BACE,kCACE,uBAAON,KAAK,WAAWM,GAAID,GAAWC,GACrCD,IAFS,QAAUC,IADfA,UAWnB,wBAAQC,QAAS,WAnCrBpB,EAAS,KAmCL,wBACA,uBACA,mBAAGqB,KAAK,0CAAR,2DCzCOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9dd346e3.chunk.js","sourcesContent":["import React, { Fragment, useState } from \"react\";\nimport \"./App.css\";\nimport \"milligram\";\n\nfunction App() {\n  const [items, setItems] = useState<string[]>([]);\n  const [inputValue, setInputValue] = useState(\"\");\n\n  function handleChange(e: React.FormEvent<HTMLElement>) {\n    e.preventDefault();\n    const newItem = inputValue;\n    if (newItem !== \"\") setItems((lists) => [...lists, newItem]);\n    setInputValue(\"\");\n  }\n\n  function removeAll() {\n    setItems([]);\n  }\n\n  return (\n    <Fragment>\n      <div className=\"container\">\n        <h1 className=\"title\">Shopping List</h1>\n        <div className=\"ShoppingListMain\">\n          <div className=\"header\">\n            <form onSubmit={handleChange}>\n              <input\n                value={inputValue}\n                onChange={(event) => setInputValue(event.target.value)}\n              ></input>\n              <button type=\"submit\">Add</button>\n            </form>\n          </div>\n        </div>\n\n        <div>\n          <ul style={{ listStyleType: \"none\" }}>\n            {items.length > 0 &&\n              items.map((item, id) => {\n                return (\n                  <li key={id}>\n                    <label key={\"label\" + id}>\n                      <input type=\"checkbox\" id={item} key={id} />\n                      {item}\n                    </label>\n                  </li>\n                );\n              })}\n          </ul>\n        </div>\n\n        <button onClick={() => removeAll()}>Remove All</button>\n        <br />\n        <a href=\"https://github.com/tomokr/shopping_list\">\n          https://github.com/tomokr/shopping_list\n        </a>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}